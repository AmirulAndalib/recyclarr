# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Inspect Code

on:
  push:
    # Explicitly specifying this results in tags being ignored, which is the goal.
    branches: ["**"]
    paths:
      - .github/workflows/inspect-code.yml
      - "**.cs"
  pull_request:
    paths:
      - .github/workflows/inspect-code.yml
      - "**.cs"

env:
  baseRef: >-
    ${{ github.ref == 'refs/heads/master' && github.event.before ||
    (github.event.base_ref || github.event.pull_request.base.ref || 'master') }}

permissions: read-all

jobs:
  inspect:
    name: Resharper Inspect Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # avoid shallow clone for GitVersion

      - name: Setup .NET & Tools
        uses: ./.github/actions/setup-dotnet

      - name: Restore
        run: dotnet restore

      - name: Inspect Code
        uses: muno92/resharper_inspectcode@1.13.0
        with:
          solutionPath: Recyclarr.slnx
          minimumSeverity: warning
          include: "**.cs"

  # DISABLED: ReSharper CLI tools don't properly support SLNX format yet
  # This causes the tool to run in "solution-less mode" which limits functionality
  # and results in "No items were found to cleanup" errors (exit code 3)
  #
  # Related JetBrains YouTrack issues:
  # - RSRP-501603: "Resharper .slnx support failures/problems"
  # - RSRP-500988: "ReSharper build doesn't work for solution in slnx format"
  # - RSRP-501504: "Cannot resolve symbol from C++/CLR with slnx solution"
  #
  # See also: https://blog.jetbrains.com/dotnet/2024/10/04/support-for-slnx-solution-files/
  # Quote: "The .NET CLI and MSBuild don't yet support SLNX files"
  #
  # TODO: Re-enable when ReSharper CLI tools gain full SLNX support
  cleanup:
    if: false # Remove when above issue is resolved
    name: Resharper Code Cleanup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # avoid shallow clone for GitVersion

      - name: Setup .NET & Tools
        uses: ./.github/actions/setup-dotnet

      - name: Run Code Cleanup
        run: >-
          dotnet jb cleanupcode Recyclarr.slnx
          --settings="Recyclarr.slnx.DotSettings"
          --profile="Recyclarr Cleanup"
          --include="**.cs"
          --no-updates
          --verbosity=TRACE
          --LogLevel=TRACE
          --debug

      - name: Check Diff
        run: |
          ci/diff_to_errors.sh
          set -o pipefail
          git diff --exit-code | tee code-cleanup.patch

      - name: Publish Patch File
        uses: actions/upload-artifact@v4.6.2
        if: failure()
        with:
          name: code-cleanup-patch-files
          path: "*.patch"

  style:
    name: CSharpier Style
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4

      - name: Setup .NET & Tools
        uses: ./.github/actions/setup-dotnet

      - name: Run CSharpier
        run: dotnet csharpier check .
